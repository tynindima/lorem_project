/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,::after,::before{box-sizing:inherit}html{box-sizing:border-box}body{margin:0}img{max-width:100%}a{text-decoration:none}.top-menu{height:40px;color:#b4b4b4}.top-menu__icon{margin-right:10px;cursor:pointer}.top-menu__sign-in{margin-left:6px;margin-right:31px;position:relative;cursor:pointer}.top-menu__sign-in::after{background:#b4b4b4;content:"";position:absolute;top:50%;right:-15px;-webkit-transform:translateY(-50%);transform:translateY(-50%);width:1px;height:20px}.top-menu__language{margin-left:8px;margin-right:15px;position:relative;cursor:pointer}.top-menu__language::after{content:"";position:absolute;right:-13px;top:30%;width:8px;height:8px;border:solid #b4b4b4;border-width:0 2px 2px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.main-menu__nav{padding:12px 0;color:#fff}.main-menu__logo{font-size:24px;font-weight:700;text-transform:uppercase;letter-spacing:1.92px;color:#fff}.main-menu__logo:hover{color:#fff}.main-menu__list{margin-left:auto}.main-menu__item{position:relative;padding-right:12px;padding-left:6px}.main-menu__item:hover::before{background:#ff4081;content:"";position:absolute;bottom:-14px;left:0;right:0;height:2px}.main-menu__link{display:inline-block;position:relative;text-transform:uppercase;font-size:14px;letter-spacing:.7px;color:#fff}.main-menu__link:hover{color:#fff}.main-menu__link::after{content:"";position:absolute;right:-13px;top:30%;width:8px;height:8px;border:solid #fff;border-width:0 2px 2px 0;-webkit-transform:rotate(45deg);transform:rotate(45deg);right:-10px}.main-menu__button{background:0 0;display:none;border:none}.main-menu__button:focus{outline:0}.main-menu__icon{position:relative;display:inline-block;height:20px;width:20px;margin-right:28px;cursor:pointer}.main-menu__icon_search{background:url(../../img/search_ico.png) no-repeat center}.main-menu__icon_search::after{background:#b4b4b4;content:"";position:absolute;top:50%;right:-15px;-webkit-transform:translateY(-50%);transform:translateY(-50%);width:1px;height:20px}.main-menu__icon_heart{background:url(../../img/heart_ico.png) no-repeat center}.main-menu__icon_heart::after{background:#b4b4b4;content:"";position:absolute;top:50%;right:-15px;-webkit-transform:translateY(-50%);transform:translateY(-50%);width:1px;height:20px}.main-menu__icon_shop{background:url(../../img/shopping_cart.png) no-repeat center}.title{color:#fff}.title__slide{height:800px}.title__caption{width:1077px;margin-top:287px}.title__caption_txt{margin-bottom:25px;font-size:28px;letter-spacing:1.4px;line-height:27px;text-transform:uppercase}.title__caption_head{margin-top:0;margin-bottom:35px;font-size:42px;font-weight:900;letter-spacing:2.1px;text-transform:uppercase}.title__button{background:#303f9f;width:170px;height:45px;padding:0;box-shadow:0 17px 24px rgba(48,63,159,.2);border-width:0;border-radius:22px;text-transform:uppercase;letter-spacing:1.2px;color:#fff}.title__button:hover{color:#b4b4b4}.header{font-family:Montserrat,sans-serif;position:relative}.header__top{background:#191919}.header__main{position:absolute;top:40px;left:0;right:0}.header__title{background:url(../../img/header_bg.png) no-repeat center/cover;height:800px}@media (max-width:768px){.header__top{background-color:#303f9f}.header__icons-box{display:none}.header__main{background-color:#3f51b5}.top-menu__sign-in{margin-right:0}.top-menu__sign-in::after{display:none}.main-menu__icon_shop::after{content:"7";position:absolute;bottom:14px;left:18px;width:20px;height:20px;border-radius:50%;background-color:#ff4081;text-align:center;line-height:20px;font-size:14px}}@media (max-width:992px){.main-menu__item:hover::before{display:none}.main-menu__link::after{display:none}.main-menu__button{display:block}.main-menu__icon_search{display:none}}@media (max-width:1200px){.main-menu__icon_heart{display:none}}.footer{border:1px solid red}main{background:#fff}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
